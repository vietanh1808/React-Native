{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { forwardRef, useState, useEffect } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userKeys = _useState6[0],\n      setUserKeys = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      users = _useState8[0],\n      setUsers = _useState8[1];\n\n  var handleLogin = function handleLogin() {\n    if (!userKeys.includes(username) && !users.includes([username, password])) {\n      Alert.alert(\"Tài khoản không đúng!\");\n      return;\n    }\n\n    setUsername('');\n    setPassword('');\n    return navigation.navigate('Main', users);\n  };\n\n  useEffect(function () {\n    readItemFromStorage();\n    return function () {\n      console.log(\"Effect Called\");\n    };\n  }, []);\n\n  var readItemFromStorage = function readItemFromStorage() {\n    var values, usernameKeys;\n    return _regeneratorRuntime.async(function readItemFromStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 3:\n            usernameKeys = _context.sent;\n            setUserKeys.apply(void 0, _toConsumableArray(userKeys).concat([usernameKeys]));\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.multiGet(usernameKeys));\n\n          case 7:\n            values = _context.sent;\n            values.map(function (value, index) {\n              return setUsers(function (prev) {\n                return [].concat(_toConsumableArray(prev), [value]);\n              });\n            });\n            _context.next = 13;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(View, null, React.createElement(Text, null, \"FORM \\u0110\\u0102NG NH\\u1EACP\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setUsername,\n    value: username,\n    placeholder: \"Nh\\u1EADp username...\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setPassword,\n    value: password,\n    placeholder: \"Nh\\u1EADp password...\"\n  }), React.createElement(Text, {\n    style: styles.textRegister,\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    }\n  }, \"\\u0110\\u0103ng k\\xFD t\\xE0i kho\\u1EA3n\"), React.createElement(Button, {\n    title: \"\\u0110\\u0103ng nh\\u1EADp\",\n    onPress: handleLogin\n  }), React.createElement(Text, null, \"Users: \"));\n}\n\nvar styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    height: 40,\n    margin: 10,\n    padding: 10\n  },\n  textRegister: {\n    textDecorationLine: \"underline\",\n    textDecorationColor: \"blue\",\n    margin: 10,\n    color: \"blue\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["J:/Documents/React Native/HelloWorld/src/screens/Login.js"],"names":["React","forwardRef","useState","useEffect","AsyncStorage","Login","navigation","username","setUsername","password","setPassword","userKeys","setUserKeys","users","setUsers","handleLogin","includes","Alert","alert","navigate","readItemFromStorage","console","log","getAllKeys","usernameKeys","multiGet","values","map","value","index","prev","styles","input","textRegister","StyleSheet","create","borderWidth","height","margin","padding","textDecorationLine","textDecorationColor","color"],"mappings":"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","sourcesContent":["import React, { forwardRef, useState, useEffect } from 'react';\r\nimport {  Alert, Button, StyleSheet, Text, View, TextInput, AsyncStorage } from 'react-native';\r\n\r\n\r\nfunction Login({ navigation }) {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [userKeys, setUserKeys] = useState([])\r\n    const [users, setUsers] = useState([])\r\n\r\n    const handleLogin = () => {\r\n        if (!userKeys.includes(username) && !users.includes([username, password])) {\r\n            Alert.alert(\"Tài khoản không đúng!\")\r\n            return\r\n        }\r\n\r\n        setUsername('')\r\n        setPassword('')\r\n\r\n        return navigation.navigate('Main', users)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        readItemFromStorage();\r\n        return () => {\r\n            console.log(\"Effect Called\");\r\n        }\r\n    }, []);\r\n    \r\n    const readItemFromStorage = async () => {\r\n        let values\r\n        try {\r\n            const usernameKeys = await AsyncStorage.getAllKeys();\r\n            setUserKeys(...userKeys, usernameKeys)\r\n            values = await AsyncStorage.multiGet(usernameKeys)\r\n\r\n            values.map((value, index) => (\r\n                setUsers(prev => {\r\n                    return [\r\n                        ...prev,\r\n                        value\r\n                    ]\r\n                })\r\n            ))\r\n        } catch(e) {\r\n          // read error\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <Text>\r\n                FORM ĐĂNG NHẬP\r\n             </Text>\r\n            <TextInput \r\n                style={styles.input}\r\n                onChangeText={setUsername}\r\n                value={username}\r\n                placeholder=\"Nhập username...\"\r\n            />\r\n             <TextInput \r\n                style={styles.input}\r\n                onChangeText={setPassword}\r\n                value={password}\r\n                placeholder=\"Nhập password...\"\r\n            />\r\n            <Text \r\n                style={styles.textRegister}\r\n                onPress={() => navigation.navigate('Register')}\r\n            >\r\n                Đăng ký tài khoản\r\n            </Text>\r\n            <Button \r\n                title=\"Đăng nhập\"\r\n                onPress={handleLogin}\r\n            />\r\n            <Text>Users: </Text>\r\n        </View>\r\n)}\r\n  \r\n  \r\n  const styles = StyleSheet.create({\r\n    input: {\r\n       borderWidth: 1,\r\n       height: 40,\r\n       margin: 10,\r\n       padding: 10\r\n    },\r\n    textRegister: {\r\n        textDecorationLine: \"underline\",\r\n        textDecorationColor: \"blue\",\r\n        margin: 10,\r\n        color: \"blue\",\r\n    },\r\n  });\r\n\r\nexport default (Login)"]},"metadata":{},"sourceType":"module"}